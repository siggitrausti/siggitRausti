erneg_pats2 <- erneg_pats
for (i in 1:length(gene_of_interest)){
erneg_pats2[,ncol(erneg_pats2)+1] <- as.numeric(erneg_data[which(rownames(erneg_data) %in% gene_of_interest[i]),id_vec])
colnames(erneg_pats2)[ncol(erneg_pats2)] <- gene_of_interest[i]
}
} else {
erneg_pats2$gene_of_interest <- as.numeric(erneg_data[which(rownames(erneg_data) %in% gene_of_interest),id_vec])
}
source('./surv_cutpoint_multiple.R')
test_zscore <- surv_cutpoint_multiple(erneg_pats2,features = gene_of_interest,time = 'survival',
event = 'status',minprop = 0.2)
#format_signature = c('Harmful!','Harmful!'))
test_zscore
# Create the data:
#erneg_pats <- erneg_pats[which(erneg_pats$survival <= 60),]
erneg_data <- vsd_tcga[,which(colnames(vsd_tcga) %in% erneg_pats$patients)]
id_remove <- setdiff(seq(1,nrow(erneg_pats),by=1),which(erneg_pats$patients %in% colnames(erneg_data)))
if(length(id_remove) != 0){
erneg_pats <- erneg_pats[-id_remove,]
}
id_vec <- c()
for (i in 1:nrow(erneg_pats)){
id_in_rna <- which(colnames(erneg_data) %in% erneg_pats$patients[i])
id_vec <- c(id_vec,id_in_rna)
}
gene_of_interest <- c('SUCLG1') # ER-negative proteomic signature
if (length(gene_of_interest != 1)){
erneg_pats2 <- erneg_pats
for (i in 1:length(gene_of_interest)){
erneg_pats2[,ncol(erneg_pats2)+1] <- as.numeric(erneg_data[which(rownames(erneg_data) %in% gene_of_interest[i]),id_vec])
colnames(erneg_pats2)[ncol(erneg_pats2)] <- gene_of_interest[i]
}
} else {
erneg_pats2$gene_of_interest <- as.numeric(erneg_data[which(rownames(erneg_data) %in% gene_of_interest),id_vec])
}
source('./surv_cutpoint_multiple.R')
test_zscore <- surv_cutpoint_multiple(erneg_pats2,features = gene_of_interest,time = 'survival',
event = 'status',minprop = 0.2)
#format_signature = c('Harmful!','Harmful!'))
test_zscore
gene_of_interest <- c('AGXT') # ER-positive proteomic signature
if (length(gene_of_interest != 1)){
erneg_pats2 <- erneg_pats
for (i in 1:length(gene_of_interest)){
erneg_pats2[,ncol(erneg_pats2)+1] <- as.numeric(erneg_data[which(rownames(erneg_data) %in% gene_of_interest[i]),id_vec])
colnames(erneg_pats2)[ncol(erneg_pats2)] <- gene_of_interest[i]
}
} else {
erneg_pats2$gene_of_interest <- as.numeric(erneg_data[which(rownames(erneg_data) %in% gene_of_interest),id_vec])
}
source('./surv_cutpoint_multiple.R')
test_zscore <- surv_cutpoint_multiple(erneg_pats2,features = gene_of_interest,time = 'survival',
event = 'status',minprop = 0.2)
#format_signature = c('Harmful!','Harmful!'))
test_zscore
which('AGXT' %in% rownames(erpos_data))
View(erneg_pats2)
gene_of_interest <- c('ANPEP') # ER-positive proteomic signature
if (length(gene_of_interest != 1)){
erneg_pats2 <- erneg_pats
for (i in 1:length(gene_of_interest)){
erneg_pats2[,ncol(erneg_pats2)+1] <- as.numeric(erneg_data[which(rownames(erneg_data) %in% gene_of_interest[i]),id_vec])
colnames(erneg_pats2)[ncol(erneg_pats2)] <- gene_of_interest[i]
}
} else {
erneg_pats2$gene_of_interest <- as.numeric(erneg_data[which(rownames(erneg_data) %in% gene_of_interest),id_vec])
}
source('./surv_cutpoint_multiple.R')
test_zscore <- surv_cutpoint_multiple(erneg_pats2,features = gene_of_interest,time = 'survival',
event = 'status',minprop = 0.2)
#format_signature = c('Harmful!','Harmful!'))
test_zscore
gene_of_interest <- c('AGXT','ANPEP','GNPNAT1') # ER-positive proteomic signature
if (length(gene_of_interest != 1)){
erneg_pats2 <- erneg_pats
for (i in 1:length(gene_of_interest)){
erneg_pats2[,ncol(erneg_pats2)+1] <- as.numeric(erneg_data[which(rownames(erneg_data) %in% gene_of_interest[i]),id_vec])
colnames(erneg_pats2)[ncol(erneg_pats2)] <- gene_of_interest[i]
}
} else {
erneg_pats2$gene_of_interest <- as.numeric(erneg_data[which(rownames(erneg_data) %in% gene_of_interest),id_vec])
}
source('./surv_cutpoint_multiple.R')
test_zscore <- surv_cutpoint_multiple(erneg_pats2,features = gene_of_interest,time = 'survival',
event = 'status',minprop = 0.2)
#format_signature = c('Harmful!','Harmful!'))
test_zscore
gene_of_interest <- c('ANPEP','GNPNAT1') # ER-positive proteomic signature
if (length(gene_of_interest != 1)){
erneg_pats2 <- erneg_pats
for (i in 1:length(gene_of_interest)){
erneg_pats2[,ncol(erneg_pats2)+1] <- as.numeric(erneg_data[which(rownames(erneg_data) %in% gene_of_interest[i]),id_vec])
colnames(erneg_pats2)[ncol(erneg_pats2)] <- gene_of_interest[i]
}
} else {
erneg_pats2$gene_of_interest <- as.numeric(erneg_data[which(rownames(erneg_data) %in% gene_of_interest),id_vec])
}
source('./surv_cutpoint_multiple.R')
test_zscore <- surv_cutpoint_multiple(erneg_pats2,features = gene_of_interest,time = 'survival',
event = 'status',minprop = 0.2)
#format_signature = c('Harmful!','Harmful!'))
test_zscore
gene_of_interest <- c('AGXT','ANPEP','GNPNAT1') # ER-positive proteomic signature
if (length(gene_of_interest != 1)){
erneg_pats2 <- erneg_pats
for (i in 1:length(gene_of_interest)){
erneg_pats2[,ncol(erneg_pats2)+1] <- as.numeric(erneg_data[which(rownames(erneg_data) %in% gene_of_interest[i]),id_vec])
colnames(erneg_pats2)[ncol(erneg_pats2)] <- gene_of_interest[i]
}
} else {
erneg_pats2$gene_of_interest <- as.numeric(erneg_data[which(rownames(erneg_data) %in% gene_of_interest),id_vec])
}
source('./surv_cutpoint_multiple.R')
test_zscore <- surv_cutpoint_multiple(erneg_pats2,features = gene_of_interest,time = 'survival',
event = 'status',minprop = 0.2)
#format_signature = c('Harmful!','Harmful!'))
test_zscore
## AND NOW FOR THE ER-POSITIVE PATIENTS:
# Create the data:
#erpos_pats <- erpos_pats[which(erpos_pats$survival <= 60),]
erpos_data <- vsd_tcga[,which(colnames(vsd_tcga) %in% erpos_pats$patients)]
id_remove <- setdiff(seq(1,nrow(erpos_pats),by=1),which(erpos_pats$patients %in% colnames(erpos_data)))
if(length(id_remove) != 0){
erpos_pats <- erpos_pats[-id_remove,]
}
id_vec <- c()
for (i in 1:nrow(erpos_pats)){
id_in_rna <- which(colnames(erpos_data) %in% erpos_pats$patients[i])
id_vec <- c(id_vec,id_in_rna)
}
if (length(gene_of_interest != 1)){
erpos_pats2 <- erpos_pats
for (i in 1:length(gene_of_interest)){
erpos_pats2[,ncol(erpos_pats2)+1] <- as.numeric(erpos_data[which(rownames(erpos_data) %in% gene_of_interest[i]),id_vec])
colnames(erpos_pats2)[ncol(erpos_pats2)] <- gene_of_interest[i]
}
} else {
erpos_pats2$gene_of_interest <- as.numeric(erpos_data[which(rownames(erpos_data) %in% gene_of_interest),id_vec])
}
source('./surv_cutpoint_multiple.R')
test_zscore <- surv_cutpoint_multiple(erpos_pats2,features = gene_of_interest,time = 'survival',
event = 'status')
#format_signature = c('Harmful!','Beneficial!'))
test_zscore
gene_of_interest <- c('ANPEP','GNPNAT1') # ER-positive proteomic signature
## AND NOW FOR THE ER-POSITIVE PATIENTS:
# Create the data:
#erpos_pats <- erpos_pats[which(erpos_pats$survival <= 60),]
erpos_data <- vsd_tcga[,which(colnames(vsd_tcga) %in% erpos_pats$patients)]
id_remove <- setdiff(seq(1,nrow(erpos_pats),by=1),which(erpos_pats$patients %in% colnames(erpos_data)))
if(length(id_remove) != 0){
erpos_pats <- erpos_pats[-id_remove,]
}
id_vec <- c()
for (i in 1:nrow(erpos_pats)){
id_in_rna <- which(colnames(erpos_data) %in% erpos_pats$patients[i])
id_vec <- c(id_vec,id_in_rna)
}
if (length(gene_of_interest != 1)){
erpos_pats2 <- erpos_pats
for (i in 1:length(gene_of_interest)){
erpos_pats2[,ncol(erpos_pats2)+1] <- as.numeric(erpos_data[which(rownames(erpos_data) %in% gene_of_interest[i]),id_vec])
colnames(erpos_pats2)[ncol(erpos_pats2)] <- gene_of_interest[i]
}
} else {
erpos_pats2$gene_of_interest <- as.numeric(erpos_data[which(rownames(erpos_data) %in% gene_of_interest),id_vec])
}
source('./surv_cutpoint_multiple.R')
test_zscore <- surv_cutpoint_multiple(erpos_pats2,features = gene_of_interest,time = 'survival',
event = 'status')
#format_signature = c('Harmful!','Beneficial!'))
test_zscore
gene_of_interest <- c('ANPEP') # ER-positive proteomic signature
## AND NOW FOR THE ER-POSITIVE PATIENTS:
# Create the data:
#erpos_pats <- erpos_pats[which(erpos_pats$survival <= 60),]
erpos_data <- vsd_tcga[,which(colnames(vsd_tcga) %in% erpos_pats$patients)]
id_remove <- setdiff(seq(1,nrow(erpos_pats),by=1),which(erpos_pats$patients %in% colnames(erpos_data)))
if(length(id_remove) != 0){
erpos_pats <- erpos_pats[-id_remove,]
}
id_vec <- c()
for (i in 1:nrow(erpos_pats)){
id_in_rna <- which(colnames(erpos_data) %in% erpos_pats$patients[i])
id_vec <- c(id_vec,id_in_rna)
}
if (length(gene_of_interest != 1)){
erpos_pats2 <- erpos_pats
for (i in 1:length(gene_of_interest)){
erpos_pats2[,ncol(erpos_pats2)+1] <- as.numeric(erpos_data[which(rownames(erpos_data) %in% gene_of_interest[i]),id_vec])
colnames(erpos_pats2)[ncol(erpos_pats2)] <- gene_of_interest[i]
}
} else {
erpos_pats2$gene_of_interest <- as.numeric(erpos_data[which(rownames(erpos_data) %in% gene_of_interest),id_vec])
}
source('./surv_cutpoint_multiple.R')
test_zscore <- surv_cutpoint_multiple(erpos_pats2,features = gene_of_interest,time = 'survival',
event = 'status')
#format_signature = c('Harmful!','Beneficial!'))
test_zscore
gene_of_interest <- c('AGXT') # ER-positive proteomic signature
test_zscore <- surv_cutpoint_multiple(erpos_pats2,features = gene_of_interest,time = 'survival',
event = 'status')
#format_signature = c('Harmful!','Beneficial!'))
test_zscore
# Create the data:
#erpos_pats <- erpos_pats[which(erpos_pats$survival <= 60),]
erpos_data <- vsd_tcga[,which(colnames(vsd_tcga) %in% erpos_pats$patients)]
# If onw wants to use the DFS survial instead of OS, this would have to be run...
#erpos_pats$survival <- erpos_pats$dfs_survival
#erpos_pats$status <- erpos_pats$dfs_status
id_remove <- setdiff(seq(1,nrow(erpos_pats),by=1),which(erpos_pats$patients %in% colnames(erpos_data)))
if(length(id_remove) != 0){
erpos_pats <- erpos_pats[-id_remove,]
}
id_vec <- c()
for (i in 1:nrow(erpos_pats)){
id_in_rna <- which(colnames(erpos_data) %in% erpos_pats$patients[i])
id_vec <- c(id_vec,id_in_rna)
}
if (length(gene_of_interest != 1)){
erpos_pats2 <- erpos_pats
for (i in 1:length(gene_of_interest)){
erpos_pats2[,ncol(erpos_pats2)+1] <- as.numeric(erpos_data[which(rownames(erpos_data) %in% gene_of_interest[i]),id_vec])
colnames(erpos_pats2)[ncol(erpos_pats2)] <- gene_of_interest[i]
}
} else {
erpos_pats2$gene_of_interest <- as.numeric(erpos_data[which(rownames(erpos_data) %in% gene_of_interest),id_vec])
}
source('./surv_cutpoint_multiple.R')
test_zscore <- surv_cutpoint_multiple(erpos_pats2,features = gene_of_interest,time = 'survival',
event = 'status')
#format_signature = c('Harmful!','Beneficial!'))
test_zscore
gene_of_interest <- c('ANPEP','GNPNAT1') # ER-positive proteomic signature
## AND NOW FOR THE ER-POSITIVE PATIENTS:
# Create the data:
#erpos_pats <- erpos_pats[which(erpos_pats$survival <= 60),]
erpos_data <- vsd_tcga[,which(colnames(vsd_tcga) %in% erpos_pats$patients)]
id_remove <- setdiff(seq(1,nrow(erpos_pats),by=1),which(erpos_pats$patients %in% colnames(erpos_data)))
if(length(id_remove) != 0){
erpos_pats <- erpos_pats[-id_remove,]
}
id_vec <- c()
for (i in 1:nrow(erpos_pats)){
id_in_rna <- which(colnames(erpos_data) %in% erpos_pats$patients[i])
id_vec <- c(id_vec,id_in_rna)
}
if (length(gene_of_interest != 1)){
erpos_pats2 <- erpos_pats
for (i in 1:length(gene_of_interest)){
erpos_pats2[,ncol(erpos_pats2)+1] <- as.numeric(erpos_data[which(rownames(erpos_data) %in% gene_of_interest[i]),id_vec])
colnames(erpos_pats2)[ncol(erpos_pats2)] <- gene_of_interest[i]
}
} else {
erpos_pats2$gene_of_interest <- as.numeric(erpos_data[which(rownames(erpos_data) %in% gene_of_interest),id_vec])
}
source('./surv_cutpoint_multiple.R')
test_zscore <- surv_cutpoint_multiple(erpos_pats2,features = gene_of_interest,time = 'survival',
event = 'status')
#format_signature = c('Harmful!','Beneficial!'))
test_zscore
format_signature = c('Harmful!','Beneficial!'))
test_zscore
test_zscore <- surv_cutpoint_multiple(erpos_pats2,features = gene_of_interest,time = 'survival',
event = 'status',
format_signature = c('Harmful!','Beneficial!'))
test_zscore
Create the data:
#erneg_pats <- erneg_pats[which(erneg_pats$survival <= 60),]
erneg_data <- vsd_tcga[,which(colnames(vsd_tcga) %in% erneg_pats$patients)]
# If onw wants to use the DFS survial instead of OS, this would have to be run...
#erneg_pats$survival <- erneg_pats$dfs_survival
#erneg_pats$status <- erneg_pats$dfs_status
id_remove <- setdiff(seq(1,nrow(erneg_pats),by=1),which(erneg_pats$patients %in% colnames(erneg_data)))
if(length(id_remove) != 0){
erneg_pats <- erneg_pats[-id_remove,]
}
id_vec <- c()
for (i in 1:nrow(erneg_pats)){
id_in_rna <- which(colnames(erneg_data) %in% erneg_pats$patients[i])
id_vec <- c(id_vec,id_in_rna)
}
#gene_of_interest <- 'LOC154808' " THIS IS ASL
#gene_of_interest <- 'LOC56960' " THIS IS SLC6A20
gene_of_interest <- c('SUCLG1') # ER-negative proteomic signature
if (length(gene_of_interest != 1)){
erneg_pats2 <- erneg_pats
for (i in 1:length(gene_of_interest)){
erneg_pats2[,ncol(erneg_pats2)+1] <- as.numeric(erneg_data[which(rownames(erneg_data) %in% gene_of_interest[i]),id_vec])
colnames(erneg_pats2)[ncol(erneg_pats2)] <- gene_of_interest[i]
}
} else {
erneg_pats2$gene_of_interest <- as.numeric(erneg_data[which(rownames(erneg_data) %in% gene_of_interest),id_vec])
}
source('./surv_cutpoint_multiple.R')
test_zscore <- surv_cutpoint_multiple(erneg_pats2,features = gene_of_interest,time = 'survival',
event = 'status',minprop = 0.2)
#format_signature = c('Harmful!','Harmful!'))
test_zscore
## AND NOW FOR THE ER-POSITIVE PATIENTS:
# Create the data:
#erpos_pats <- erpos_pats[which(erpos_pats$survival <= 60),]
erpos_data <- vsd_tcga[,which(colnames(vsd_tcga) %in% erpos_pats$patients)]
id_remove <- setdiff(seq(1,nrow(erpos_pats),by=1),which(erpos_pats$patients %in% colnames(erpos_data)))
if(length(id_remove) != 0){
erpos_pats <- erpos_pats[-id_remove,]
}
id_vec <- c()
for (i in 1:nrow(erpos_pats)){
id_in_rna <- which(colnames(erpos_data) %in% erpos_pats$patients[i])
id_vec <- c(id_vec,id_in_rna)
}
if (length(gene_of_interest != 1)){
erpos_pats2 <- erpos_pats
for (i in 1:length(gene_of_interest)){
erpos_pats2[,ncol(erpos_pats2)+1] <- as.numeric(erpos_data[which(rownames(erpos_data) %in% gene_of_interest[i]),id_vec])
colnames(erpos_pats2)[ncol(erpos_pats2)] <- gene_of_interest[i]
}
} else {
erpos_pats2$gene_of_interest <- as.numeric(erpos_data[which(rownames(erpos_data) %in% gene_of_interest),id_vec])
}
source('./surv_cutpoint_multiple.R')
test_zscore <- surv_cutpoint_multiple(erpos_pats2,features = gene_of_interest,time = 'survival',
event = 'status',
format_signature = c('Harmful!','Beneficial!'))
test_zscore
test_zscore <- surv_cutpoint_multiple(erpos_pats2,features = gene_of_interest,time = 'survival',
event = 'status')
#format_signature = c('Harmful!','Beneficial!'))
test_zscore
library(siggitRausti)
library(survminer)
library(survival)
library(survivalROC)
clinical_data <- read.table('data_bcr_clinical_data_patient.txt',header=T,sep='\t',fill=T)
clin_data <- clinical_data[,c("PATIENT_ID","OS_MONTHS","OS_STATUS","RACE","DFS_MONTHS","DFS_STATUS","AGE","SEX","INITIAL_PATHOLOGIC_DX_YEAR","ER_STATUS_BY_IHC","AJCC_PATHOLOGIC_TUMOR_STAGE",
"HER2_IHC_SCORE")]
clin_data$PATIENT_ID <- gsub("-",".",clin_data$PATIENT_ID)
clin_data$PATIENT_ID <- paste0(clin_data$PATIENT_ID,'.01') # .01 means tumor samples.
# Load RNAseq data (and subtype vector)
#dd_subtype <- readRDS(file = "Subtyped_TCGA_data.rds")
#dd_subtype$ER <- rep(NA,nrow(dd_subtype))
erpos_pats <- data.frame(clin_data$PATIENT_ID[which(clin_data$ER_STATUS_BY_IHC == 'Positive')])
colnames(erpos_pats) <- 'patients'
erneg_pats<- data.frame(clin_data$PATIENT_ID[which(clin_data$ER_STATUS_BY_IHC == 'Negative')])
colnames(erneg_pats) <- 'patients'
id_erpos <- c()
for (i in 1:nrow(erpos_pats)){
id_erpos <- c(id_erpos,which(clin_data$PATIENT_ID %in% erpos_pats$patients[i]))
}
id_erneg <- c()
for (i in 1:nrow(erneg_pats)){
id_erneg <- c(id_erneg,which(clin_data$PATIENT_ID %in% erneg_pats$patients[i]))
}
erpos_pats$age <- as.numeric(as.character(clin_data$AGE[id_erpos]))
erneg_pats$age <- as.numeric(as.character(clin_data$AGE[id_erneg]))
erpos_pats$YEAR_DX <- as.numeric(as.character(clin_data$INITIAL_PATHOLOGIC_DX_YEAR[id_erpos]))
erneg_pats$YEAR_DX <- as.numeric(as.character(clin_data$INITIAL_PATHOLOGIC_DX_YEAR[id_erneg]))
erpos_pats$survival <- as.numeric(as.character(clin_data$OS_MONTHS[id_erpos]))
erneg_pats$survival <- as.numeric(as.character(clin_data$OS_MONTHS[id_erneg]))
erpos_pats$status <- clin_data$OS_STATUS[id_erpos]
erpos_pats$status <- ifelse(erpos_pats$status == 'DECEASED',1,0)
erneg_pats$status <- clin_data$OS_STATUS[id_erneg]
erneg_pats$status <- ifelse(erneg_pats$status == 'DECEASED',1,0)
erpos_pats$dfs_status <- clin_data$DFS_STATUS[id_erpos]
erpos_pats$dfs_status <- ifelse(erpos_pats$dfs_status == 'Recurred/Progressed',1,0)
erneg_pats$dfs_status <- clin_data$DFS_STATUS[id_erneg]
erneg_pats$dfs_status <- ifelse(erneg_pats$dfs_status == 'Recurred/Progressed',1,0)
erpos_pats$dfs_survival <- as.numeric(as.character(clin_data$DFS_MONTHS[id_erpos]))
erneg_pats$dfs_survival <- as.numeric(as.character(clin_data$DFS_MONTHS[id_erneg]))
erpos_pats$ER <- clin_data$ER_STATUS_BY_IHC[id_erpos]
erneg_pats$ER <- clin_data$ER_STATUS_BY_IHC[id_erneg]
erpos_pats$HER2 <- clin_data$HER2_IHC_SCORE[id_erpos]
erneg_pats$HER2 <- clin_data$HER2_IHC_SCORE[id_erneg]
erneg_pats$HER2[which(erneg_pats$HER2 == '[Not Available]')] <- NA
erpos_pats$HER2[which(erpos_pats$HER2 == '[Not Available]')] <- NA
erneg_pats$HER2 <- as.factor(erneg_pats$HER2)
erpos_pats$HER2 <- as.factor(erpos_pats$HER2)
vsd_tcga <- readRDS(file = 'TCGA_data_whole_vst_transformed_170519.rds') # NON-z-sscored TCGA data (but normalized)
# Create the data:
#erneg_pats <- erneg_pats[which(erneg_pats$survival <= 60),]
erneg_data <- vsd_tcga[,which(colnames(vsd_tcga) %in% erneg_pats$patients)]
id_remove <- setdiff(seq(1,nrow(erneg_pats),by=1),which(erneg_pats$patients %in% colnames(erneg_data)))
if(length(id_remove) != 0){
erneg_pats <- erneg_pats[-id_remove,]
}
id_vec <- c()
for (i in 1:nrow(erneg_pats)){
id_in_rna <- which(colnames(erneg_data) %in% erneg_pats$patients[i])
id_vec <- c(id_vec,id_in_rna)
}
gene_of_interest <- c('RENBP') # ER-negative proteomic signature
if (length(gene_of_interest != 1)){
erneg_pats2 <- erneg_pats
for (i in 1:length(gene_of_interest)){
erneg_pats2[,ncol(erneg_pats2)+1] <- as.numeric(erneg_data[which(rownames(erneg_data) %in% gene_of_interest[i]),id_vec])
colnames(erneg_pats2)[ncol(erneg_pats2)] <- gene_of_interest[i]
}
} else {
erneg_pats2$gene_of_interest <- as.numeric(erneg_data[which(rownames(erneg_data) %in% gene_of_interest),id_vec])
}
source('./surv_cutpoint_multiple.R')
test_zscore <- surv_cutpoint_multiple(erneg_pats2,features = gene_of_interest,time = 'survival',
event = 'status',minprop = 0.2)
#format_signature = c('Harmful!','Harmful!'))
test_zscore
gene_of_interest <- c('RENBP','SLC16A10') # ER-positive proteomic signature
if (length(gene_of_interest != 1)){
erneg_pats2 <- erneg_pats
for (i in 1:length(gene_of_interest)){
erneg_pats2[,ncol(erneg_pats2)+1] <- as.numeric(erneg_data[which(rownames(erneg_data) %in% gene_of_interest[i]),id_vec])
colnames(erneg_pats2)[ncol(erneg_pats2)] <- gene_of_interest[i]
}
} else {
erneg_pats2$gene_of_interest <- as.numeric(erneg_data[which(rownames(erneg_data) %in% gene_of_interest),id_vec])
}
source('./surv_cutpoint_multiple.R')
test_zscore <- surv_cutpoint_multiple(erneg_pats2,features = gene_of_interest,time = 'survival',
event = 'status',minprop = 0.2)
#format_signature = c('Harmful!','Harmful!'))
test_zscore
## AND NOW FOR THE ER-POSITIVE PATIENTS:
# Create the data:
#erpos_pats <- erpos_pats[which(erpos_pats$survival <= 60),]
erpos_data <- vsd_tcga[,which(colnames(vsd_tcga) %in% erpos_pats$patients)]
id_remove <- setdiff(seq(1,nrow(erpos_pats),by=1),which(erpos_pats$patients %in% colnames(erpos_data)))
if(length(id_remove) != 0){
erpos_pats <- erpos_pats[-id_remove,]
}
id_vec <- c()
for (i in 1:nrow(erpos_pats)){
id_in_rna <- which(colnames(erpos_data) %in% erpos_pats$patients[i])
id_vec <- c(id_vec,id_in_rna)
}
if (length(gene_of_interest != 1)){
erpos_pats2 <- erpos_pats
for (i in 1:length(gene_of_interest)){
erpos_pats2[,ncol(erpos_pats2)+1] <- as.numeric(erpos_data[which(rownames(erpos_data) %in% gene_of_interest[i]),id_vec])
colnames(erpos_pats2)[ncol(erpos_pats2)] <- gene_of_interest[i]
}
} else {
erpos_pats2$gene_of_interest <- as.numeric(erpos_data[which(rownames(erpos_data) %in% gene_of_interest),id_vec])
}
source('./surv_cutpoint_multiple.R')
test_zscore <- surv_cutpoint_multiple(erpos_pats2,features = gene_of_interest,time = 'survival',
event = 'status')
#format_signature = c('Harmful!','Beneficial!'))
test_zscore
#format_signature = c('Harmful!','Harmful!'))
test_zscore + ggplot2::annotate("text",
x = 11, y = 0.28, # x and y coordinates of the text
label = 'ER-', size = 8)
#format_signature = c('Harmful!','Harmful!'))
test_zscore$plot + ggplot2::annotate("text",
x = 11, y = 0.28, # x and y coordinates of the text
label = 'ER-', size = 8)
source('./surv_cutpoint_multiple.R')
test_zscore <- surv_cutpoint_multiple(erneg_pats2,features = gene_of_interest,time = 'survival',
event = 'status',minprop = 0.2)
#format_signature = c('Harmful!','Harmful!'))
test_zscore$plot + ggplot2::annotate("text",
x = 11, y = 0.28, # x and y coordinates of the text
label = 'ER-', size = 8
source('./surv_cutpoint_multiple.R')
test_zscore <- surv_cutpoint_multiple(erneg_pats2,features = gene_of_interest,time = 'survival',
event = 'status',minprop = 0.2)
#format_signature = c('Harmful!','Harmful!'))
test_zscore$plot + ggplot2::annotate("text",
x = 11, y = 0.28, # x and y coordinates of the text
label = 'ER-', size = 8)
View(surv_cutpoint_multiple)
source('./surv_cutpoint_multiple.R')
test_zscore <- surv_cutpoint_multiple(erneg_pats2,features = gene_of_interest,time = 'survival',
event = 'status',minprop = 0.2)
#format_signature = c('Harmful!','Harmful!'))
test_zscore$plot + ggplot2::annotate("text",
x = 11, y = 0.28, # x and y coordinates of the text
label = 'ER-', size = 8)
erpos_data <- vsd_tcga[,which(colnames(vsd_tcga) %in% erpos_pats$patients)]
# If onw wants to use the DFS survial instead of OS, this would have to be run...
#erpos_pats$survival <- erpos_pats$dfs_survival
#erpos_pats$status <- erpos_pats$dfs_status
id_remove <- setdiff(seq(1,nrow(erpos_pats),by=1),which(erpos_pats$patients %in% colnames(erpos_data)))
if(length(id_remove) != 0){
erpos_pats <- erpos_pats[-id_remove,]
}
id_vec <- c()
for (i in 1:nrow(erpos_pats)){
id_in_rna <- which(colnames(erpos_data) %in% erpos_pats$patients[i])
id_vec <- c(id_vec,id_in_rna)
}
if (length(gene_of_interest != 1)){
erpos_pats2 <- erpos_pats
for (i in 1:length(gene_of_interest)){
erpos_pats2[,ncol(erpos_pats2)+1] <- as.numeric(erpos_data[which(rownames(erpos_data) %in% gene_of_interest[i]),id_vec])
colnames(erpos_pats2)[ncol(erpos_pats2)] <- gene_of_interest[i]
}
} else {
erpos_pats2$gene_of_interest <- as.numeric(erpos_data[which(rownames(erpos_data) %in% gene_of_interest),id_vec])
}
source('./surv_cutpoint_multiple.R')
test_zscore <- surv_cutpoint_multiple(erpos_pats2,features = gene_of_interest,time = 'survival',
event = 'status')
#format_signature = c('Harmful!','Beneficial!'))
test_zscore$plot + ggplot2::annotate("text",
x = 11, y = 0.28, # x and y coordinates of the text
label = 'ER+', size = 8)
setwd("E:/Dropbox/R_Dropbox/siggitRausti")
library(devtools)
document()
document()
