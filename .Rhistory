# Start with osteo data:
#dat <- read_excel('E:/Dropbox/R_Dropbox/Thora_FEB2020/file_show (1).xlsx','Osteo_4tharticle_data')
dat <- read_excel('E:/Dropbox/R_Dropbox/Thora_FEB2020/file_show (1).xlsx','Osteo_4tharticle_data_withnotes')
View(dat)
# Take out columns that all have the same values:
dat <- dat[,-c(1,3,4,7,8,9,10)]
# For pairwise comparison of days, only keep the data where those days are present:
id_keep <- which(dat$Day %in% c(3,28))
dat <- dat[id_keep,]
View(dat)
# Go through all dataframe, and set NA where there are values below 0:
for (i in 5:ncol(dat)){
dat[dat[,i] < 0] <- NA
}
# Go through all dataframe, and set NA where there are values below 0:
for (i in 5:ncol(dat)){
id_zero <- which(dat[,i] < 0)
dat[id_zero,i] <- NA
}
setwd('E:/Dropbox/R_Dropbox')
#source("./FJfunctions/loadAll.r")
#loadAll()
setwd('E:/Dropbox/R_Dropbox/Thora_FEB2020/')
# Start with osteo data:
#dat <- read_excel('E:/Dropbox/R_Dropbox/Thora_FEB2020/file_show (1).xlsx','Osteo_4tharticle_data')
dat <- read_excel('E:/Dropbox/R_Dropbox/Thora_FEB2020/file_show (1).xlsx','Osteo_4tharticle_data_withnotes')
# Take out columns that all have the same values:
dat <- dat[,-c(1,3,4,7,8,9,10)]
# For pairwise comparison of days, only keep the data where those days are present:
id_keep <- which(dat$Day %in% c(3,28))
dat <- dat[id_keep,]
# Go through all dataframe, and set NA where there are values below 0:
for (i in 5:ncol(dat)){
id_zero <- which(dat[,i] < 0)
dat[id_zero,i] <- NA
}
View(dat)
# Now, go through all metabolites, identify which are sign. different between days.
dat$Donor <- as.factor(dat$Donor)
dat$Label <- as.factor(dat$Label)
#colnames(dat)[5] <- 'Seeding_dens'
#dat$Seeding_dens <- as.numeric(dat$Seeding_dens)
dat$Day <- as.factor(dat$Day)
dat <- data.frame(dat)
# Change the non-numeric columns to numeric:
for (i in 5:ncol(dat)){
dat[,i] <- as.numeric(dat[,i])
}
dat[,c(4:ncol(dat))] <- scale(dat[,c(4:ncol(dat))])
thora.glm <- glmer(formula = Day ~ dat[,13] + Label + (1|Donor),family = binomial, data = dat)
#thora.glm2 <- glm(formula = Day ~ dat[,11],family = binomial, data = dat)
thora.glm3 <- glm(formula = Day ~ dat[,13] + Label,family = binomial, data = dat)
thora.glm4 <- glmer(formula = Day ~ dat[,13] + (Day|Donor),family = binomial, data = dat)
anova(thora.glm,thora.glm3,thora.glm4)
anova(thora.glm3,thora.glm4)
#thora.glm2 <- glm(formula = Day ~ dat[,11],family = binomial, data = dat)
thora.glm3 <- glm(formula = Day ~ dat[,13] + Label,family = binomial, data = dat)
thora.glm4 <- glmer(formula = Day ~ dat[,13] + (Day|Donor),family = binomial, data = dat)
anova(thora.glm3,thora.glm4)
anova(thora.glm3,thora.glm)
thora.glm4 <- glmer(formula = Day ~ dat[,13] + (1|Donor),family = binomial, data = dat)
anova(thora.glm3,thora.glm4)
anova(thora.glm,thora.glm3,thora.glm4)
anova(thora.glm,thora.glm4)
p_vector <- c()
for (i in 4:ncol(dat)){
thora.glm <- glmer(formula = Day ~ dat[,i] + Label + (1|Donor),family = binomial, data = dat)
#thora.glm <- glm(formula = Day ~ dat[,i] + Label,family = binomial(), data = dat)
tmp_p <- as.numeric(coef(summary(thora.glm))[,4][2])
p_vector <- c(p_vector,tmp_p)
rm(thora.glm)
}
id_sign <- which(p_vector < 0.06)
colnames(dat)[id_sign+3]
# Plot raw data:
source('E:/Dropbox/R_Dropbox/13C_analysis_and_IDH2_SEPT2019/boxMets2.R')
boxMets2(dat,id_sign+3,'Day','Day',stat_test=T,ref_group = '3',common_legend = F)
# See which are the coefficients:
thora.glm <- glmer(formula = Day ~ dat$Citrulline + Label + (1|Donor),family = binomial, data = dat)
summary(thora.glm)
# See which are the coefficients:
thora.glm <- glmer(formula = Day ~ dat$Riboflavin + Label + (1|Donor),family = binomial, data = dat)
summary(thora.glm)
# Try grouping day 3 from day 28 by using this metabolite (along with other factors):
roc_data <- data.frame(cbind(dat$Day,dat$Label,dat$Riboflavin))
source('E:/Dropbox/R_Dropbox/Trauma_untargeted_FEB2020/ROC_maker.R')
colnames(roc_data) <- c('Day','Label','Riboflavin')
roc_data$Day <- as.factor(roc_data$Day)
roc_data$Label <- as.factor(roc_data$Label)
i1 <- ROC_maker(roc_data)
View(new_data)
View(roc_data)
roc_data <- roc_data[complete.cases(roc_data),]
i1 <- ROC_maker(roc_data)
p_vector <- c()
for (i in 4:ncol(dat)){
tmp_dat <- dat[,c(1,2,3,i)]
tmp_dat <- tmp_dat[complete.cases(tmp_dat),]
#thora.glm <- glmer(formula = Day ~ dat[,i] + Label + (1|Donor),family = binomial, data = dat)
thora.glm <- glm(formula = Day ~ tmp_dat[,4] + Label,family = binomial(), data = tmp_dat)
tmp_p <- as.numeric(coef(summary(thora.glm))[,4][2])
p_vector <- c(p_vector,tmp_p)
rm(thora.glm)
rm(tmp_dat)
}
id_sign <- which(p_vector < 0.06)
colnames(dat)[id_sign+3]
p_vector
id_sign <- which(p_vector < 0.07)
colnames(dat)[id_sign+3]
# Plot raw data:
source('E:/Dropbox/R_Dropbox/13C_analysis_and_IDH2_SEPT2019/boxMets2.R')
boxMets2(dat,id_sign+3,'Day','Day',stat_test=T,ref_group = '3',common_legend = F)
# See which are the coefficients:
thora.glm <- glmer(formula = Day ~ dat$Riboflavin + Label + (1|Donor),family = binomial, data = dat)
summary(thora.glm)
# See which are the coefficients:
thora.glm <- glmer(formula = Day ~ dat$Fumarate + Label,family = binomial, data = dat)
summary(thora.glm)
as.numeric(coef(summary(thora.glm))[,4][2])
# Plot adjusted values:
thora.glm <- glmer(formula = Day ~ dat$Fumarate + Label + (1|Donor),family = binomial, data = dat)
new_data <- dat[,c(1:3,which(colnames(dat) %in% 'Fumarate'))]
# Plot adjusted values:
thora.glm <- glmer(formula = Day ~ dat$Fumarate + Label,family = binomial, data = dat)
new_data <- dat[,c(1:3,which(colnames(dat) %in% 'Fumarate'))]
pred_values <- predict(thora.glm,new_data,type = 'response')
# Plot adjusted values:
#thora.glm <- glmer(formula = Day ~ dat$Fumarate + Label + (1|Donor),family = binomial, data = dat)
thora.glm <- glm(formula = Day ~ dat$Fumarate + Label,family = binomial(), data = dat)
new_data <- dat[,c(1:3,which(colnames(dat) %in% 'Fumarate'))]
pred_values <- predict(thora.glm,new_data,type = 'response')
new_data$predicted = pred_values
boxMets2(new_data,ncol(new_data),'Day','Day',stat_test = T,ref_group = '3',common_legend = F)
# If label or donor would not be accounted for:
thora.glm2 <- glm(formula = Day ~ dat$Fumarate,family = binomial(), data = dat)
new_data2 <- dat[,c(1:3,which(colnames(dat) %in% 'Fumarate'))]
pred_values2 <- predict(thora.glm2,new_data2,type = 'response')
new_data2$predicted = pred_values2
boxMets2(new_data2,ncol(new_data2),'Day','Day',stat_test = T,ref_group = '3',common_legend = F)
dat$Fumarate
which(colnames(dat) %in% 'Fumarate')
i = 10
tmp_dat <- dat[,c(1,2,3,i)]
View(tmp_dat)
tmp_dat$Label
tmp_dat$Day
tmp_dat <- tmp_dat[complete.cases(tmp_dat),]
#thora.glm <- glmer(formula = Day ~ dat[,i] + Label + (1|Donor),family = binomial, data = dat)
thora.glm <- glm(formula = Day ~ tmp_dat[,4] + Label,family = binomial, data = tmp_dat)
summary(thora.glm)
#thora.glm <- glmer(formula = Day ~ dat[,i] + Label + (1|Donor),family = binomial, data = dat)
thora.glm <- glm(formula = Day ~ Fumarate + Label,family = binomial, data = tmp_dat)
summary(thora.glm)
# See which are the coefficients:
thora.glm <- glm(formula = Day ~ dat$Fumarate + Label,family = binomial, data = dat)
summary(thora.glm)
tmp_p <- as.numeric(coef(summary(thora.glm))[,4][2])
p_vector <- c(p_vector,tmp_p)
colSums(dat$Ascorbic.acid)
length(which(is.na(dat$Ascorbic.acid)))
length(which(is.na(dat$Ascorbic.acid)))/nrow(dat)
p_vector <- c()
for (i in 4:ncol(dat)){
tmp_dat <- dat[,c(1,2,3,i)]
tmp_dat <- tmp_dat[complete.cases(tmp_dat),]
thora.glm <- glmer(formula = Day ~ tmp_dat[,4] + Label + (1|Donor),family = binomial, data = dat)
#thora.glm <- glm(formula = Day ~ tmp_dat[,4] + Label,family = binomial, data = tmp_dat)
tmp_p <- as.numeric(coef(summary(thora.glm))[,4][2])
p_vector <- c(p_vector,tmp_p)
rm(thora.glm)
rm(tmp_dat)
}
tmp_dat <- dat[,c(1,2,3,i)]
View(tmp_dat)
tmp_dat <- tmp_dat[complete.cases(tmp_dat),]
View(tmp_dat)
thora.glm <- glmer(formula = Day ~ tmp_dat[,4] + Label + (1|Donor),family = binomial, data = dat)
View(dat)
Anova(thora.glm)
thora.glm4 <- glmer(formula = Day ~ dat[,13] + (1|Donor),family = binomial, data = dat)
Anova(thora.glm4)
# Start with osteo data:
#dat <- read_excel('E:/Dropbox/R_Dropbox/Thora_FEB2020/file_show (1).xlsx','Osteo_4tharticle_data')
dat <- read_excel('E:/Dropbox/R_Dropbox/Thora_FEB2020/file_show (1).xlsx','Osteo_4tharticle_data_withnotes')
# Take out columns that all have the same values:
dat <- dat[,-c(1,3,4,7,8,9,10)]
# For pairwise comparison of days, only keep the data where those days are present:
#id_keep <- which(dat$Day %in% c(3,28)) # What if I can just consider all timepoints? To see which metabolites ARE changing?
dat <- dat[id_keep,]
# Go through all dataframe, and set NA where there are values below 0:
for (i in 5:ncol(dat)){
id_zero <- which(dat[,i] < 0)
dat[id_zero,i] <- NA
}
# Now, go through all metabolites, identify which are sign. different between days.
dat$Donor <- as.factor(dat$Donor)
dat$Label <- as.factor(dat$Label)
#colnames(dat)[5] <- 'Seeding_dens'
#dat$Seeding_dens <- as.numeric(dat$Seeding_dens)
dat$Day <- as.factor(dat$Day)
dat <- data.frame(dat)
# Change the non-numeric columns to numeric:
for (i in 5:ncol(dat)){
dat[,i] <- as.numeric(dat[,i])
}
dat[,c(4:ncol(dat))] <- scale(dat[,c(4:ncol(dat))])
warnings()
thora.glm <- glmer(formula = Day ~ dat[,13] + Label + (1|Donor),family = binomial, data = dat)
#thora.glm2 <- glm(formula = Day ~ dat[,11],family = binomial, data = dat)
thora.glm3 <- glm(formula = Day ~ dat[,13] + Label,family = binomial, data = dat)
thora.glm4 <- glmer(formula = Day ~ dat[,13] + (1|Donor),family = binomial, data = dat)
anova(thora.glm,thora.glm4)
Anova(thora.glm4)
View(thora.glm)
setwd('E:/Dropbox/R_Dropbox')
#source("./FJfunctions/loadAll.r")
#loadAll()
setwd('E:/Dropbox/R_Dropbox/Thora_FEB2020/')
thora.glm <- glmer(formula = Day ~ dat[,13] + Label + (1|Donor),family = binomial, data = dat)
View(dat)
hist(dat[,20])
hist(dat[,25])
hist(dat[,30])
# Start with osteo data:
#dat <- read_excel('E:/Dropbox/R_Dropbox/Thora_FEB2020/file_show (1).xlsx','Osteo_4tharticle_data')
dat <- read_excel('E:/Dropbox/R_Dropbox/Thora_FEB2020/file_show (1).xlsx','Osteo_4tharticle_data_withnotes')
# Take out columns that all have the same values:
dat <- dat[,-c(1,3,4,7,8,9,10)]
# For pairwise comparison of days, only keep the data where those days are present:
#id_keep <- which(dat$Day %in% c(3,28)) # What if I can just consider all timepoints? To see which metabolites ARE changing?
#dat <- dat[id_keep,]
# Go through all dataframe, and set NA where there are values below 0:
for (i in 5:ncol(dat)){
id_zero <- which(dat[,i] < 0)
dat[id_zero,i] <- NA
}
# Now, go through all metabolites, identify which are sign. different between days.
dat$Donor <- as.factor(dat$Donor)
dat$Label <- as.factor(dat$Label)
#colnames(dat)[5] <- 'Seeding_dens'
#dat$Seeding_dens <- as.numeric(dat$Seeding_dens)
dat$Day <- as.factor(dat$Day)
dat <- data.frame(dat)
# Change the non-numeric columns to numeric:
for (i in 5:ncol(dat)){
dat[,i] <- as.numeric(dat[,i])
}
dat[,c(4:ncol(dat))] <- log(dat[,c(4:ncol(dat))]+0.01)
dat[,c(4:ncol(dat))] <- scale(dat[,c(4:ncol(dat))])
#id_keep2 <- which(dat$Status %in% 'Unlabelled')
#dat <- dat[id_keep2,]
hist(dat[,25])
hist(dat[,20])
hist(dat[,40])
hist(dat[,64])
View(dat)
#dat <- read_excel('E:/Dropbox/R_Dropbox/Thora_FEB2020/file_show (1).xlsx','Osteo_4tharticle_data')
dat <- read_excel('E:/Dropbox/R_Dropbox/Thora_FEB2020/file_show (1).xlsx','Osteo_4tharticle_data_withnotes')
# Take out columns that all have the same values:
dat <- dat[c(1:58),-c(1,3,4,7,8,9,10)]
# For pairwise comparison of days, only keep the data where those days are present:
#id_keep <- which(dat$Day %in% c(3,28)) # What if I can just consider all timepoints? To see which metabolites ARE changing?
#dat <- dat[id_keep,]
# Go through all dataframe, and set NA where there are values below 0:
for (i in 5:ncol(dat)){
id_zero <- which(dat[,i] < 0)
dat[id_zero,i] <- NA
}
# Now, go through all metabolites, identify which are sign. different between days.
dat$Donor <- as.factor(dat$Donor)
dat$Label <- as.factor(dat$Label)
#colnames(dat)[5] <- 'Seeding_dens'
#dat$Seeding_dens <- as.numeric(dat$Seeding_dens)
dat$Day <- as.factor(dat$Day)
dat <- data.frame(dat)
# Change the non-numeric columns to numeric:
for (i in 5:ncol(dat)){
dat[,i] <- as.numeric(dat[,i])
}
dat[,c(4:ncol(dat))] <- log(dat[,c(4:ncol(dat))]+0.01)
dat[,c(4:ncol(dat))] <- scale(dat[,c(4:ncol(dat))])
#id_keep2 <- which(dat$Status %in% 'Unlabelled')
#dat <- dat[id_keep2,]
View(dat)
hist(dat[,40])
dat[,40]
dat[,41]
hist(dat[,41])
# Take out columns where there are more than 20% missing values:
takout_vec <- c()
for (i in 5:ncol(dat)){
missing_percentage = length(which(is.na(dat[,i])))/nrow(takeout_vec)
if (missing_percentage > 0.3){
takeout_vec <- c(takeout_vec,i)
}
}
# Take out columns where there are more than 20% missing values:
takeout_vec <- c()
for (i in 5:ncol(dat)){
missing_percentage = length(which(is.na(dat[,i])))/nrow(takeout_vec)
if (missing_percentage > 0.3){
takeout_vec <- c(takeout_vec,i)
}
}
length(which(is.na(dat[,i])))/nrow(takeout_vec)
which(is.na(dat[,i])))/
which(is.na(dat[,i])))
which(is.na(dat[,i]))
length(which(is.na(dat[,i])))
length(which(is.na(dat[,i])))/nrow(dat)
# Take out columns where there are more than 20% missing values:
takeout_vec <- c()
for (i in 5:ncol(dat)){
missing_percentage = length(which(is.na(dat[,i])))/nrow(dat)
if (missing_percentage > 0.3){
takeout_vec <- c(takeout_vec,i)
}
}
dat <- dat[,-takeout_vec]
hist(dat[,10])
dat <- dat[c(1:58),-c(1,3,4,7,8,9,10)]
# For pairwise comparison of days, only keep the data where those days are present:
#id_keep <- which(dat$Day %in% c(3,28)) # What if I can just consider all timepoints? To see which metabolites ARE changing?
#dat <- dat[id_keep,]
# Go through all dataframe, and set NA where there are values below 0:
for (i in 5:ncol(dat)){
id_zero <- which(dat[,i] < 0)
dat[id_zero,i] <- NA
}
# Now, go through all metabolites, identify which are sign. different between days.
dat$Donor <- as.factor(dat$Donor)
dat$Label <- as.factor(dat$Label)
#colnames(dat)[5] <- 'Seeding_dens'
#dat$Seeding_dens <- as.numeric(dat$Seeding_dens)
dat$Day <- as.factor(dat$Day)
dat <- data.frame(dat)
# Change the non-numeric columns to numeric:
for (i in 5:ncol(dat)){
dat[,i] <- as.numeric(dat[,i])
}
#dat[,c(4:ncol(dat))] <- log(dat[,c(4:ncol(dat))]+0.01)
dat[,c(4:ncol(dat))] <- scale(dat[,c(4:ncol(dat))])
dat <- read_excel('E:/Dropbox/R_Dropbox/Thora_FEB2020/file_show (1).xlsx','Osteo_4tharticle_data_withnotes')
# Take out columns that all have the same values:
dat <- dat[c(1:58),-c(1,3,4,7,8,9,10)]
# For pairwise comparison of days, only keep the data where those days are present:
#id_keep <- which(dat$Day %in% c(3,28)) # What if I can just consider all timepoints? To see which metabolites ARE changing?
#dat <- dat[id_keep,]
# Go through all dataframe, and set NA where there are values below 0:
for (i in 5:ncol(dat)){
id_zero <- which(dat[,i] < 0)
dat[id_zero,i] <- NA
}
# Now, go through all metabolites, identify which are sign. different between days.
dat$Donor <- as.factor(dat$Donor)
dat$Label <- as.factor(dat$Label)
#colnames(dat)[5] <- 'Seeding_dens'
#dat$Seeding_dens <- as.numeric(dat$Seeding_dens)
dat$Day <- as.factor(dat$Day)
dat <- data.frame(dat)
# Change the non-numeric columns to numeric:
for (i in 5:ncol(dat)){
dat[,i] <- as.numeric(dat[,i])
}
#dat[,c(4:ncol(dat))] <- log(dat[,c(4:ncol(dat))]+0.01)
dat[,c(4:ncol(dat))] <- scale(dat[,c(4:ncol(dat))])
#id_keep2 <- which(dat$Status %in% 'Unlabelled')
# Take out columns where there are more than 20% missing values:
takeout_vec <- c()
for (i in 5:ncol(dat)){
missing_percentage = length(which(is.na(dat[,i])))/nrow(dat)
if (missing_percentage > 0.3){
takeout_vec <- c(takeout_vec,i)
}
}
dat <- dat[,-takeout_vec]
hist(as.matrix(dat[,4:ncol(dat)]))
hist(as.matrix(dat[,10:ncol(dat)]))
hist(as.matrix(dat[,10]))
hist(as.matrix(dat[,12]))
hist(as.matrix(dat[,13]))
hist(as.matrix(dat[,14]))
thora.glm <- lmer(formula = dat[,13] + Label + (1|Donor),family = gamma(), data = dat)
thora.glm <- lmer(formula = dat[,13] + Label + (1|Donor),family = Gamma, data = dat)
thora.glm <- lmer(formula = dat[,13] ~ Label + (1|Donor),family = Gamma, data = dat)
dat <- read_excel('E:/Dropbox/R_Dropbox/Thora_FEB2020/file_show (1).xlsx','Osteo_4tharticle_data_withnotes')
# Take out columns that all have the same values:
dat <- dat[c(1:58),-c(1,3,4,7,8,9,10)]
# For pairwise comparison of days, only keep the data where those days are present:
#id_keep <- which(dat$Day %in% c(3,28)) # What if I can just consider all timepoints? To see which metabolites ARE changing?
#dat <- dat[id_keep,]
# Go through all dataframe, and set NA where there are values below 0:
for (i in 5:ncol(dat)){
id_zero <- which(dat[,i] < 0)
dat[id_zero,i] <- NA
}
# Now, go through all metabolites, identify which are sign. different between days.
dat$Donor <- as.factor(dat$Donor)
dat$Label <- as.factor(dat$Label)
#colnames(dat)[5] <- 'Seeding_dens'
#dat$Seeding_dens <- as.numeric(dat$Seeding_dens)
dat$Day <- as.factor(dat$Day)
dat <- data.frame(dat)
# Change the non-numeric columns to numeric:
for (i in 5:ncol(dat)){
dat[,i] <- as.numeric(dat[,i])
}
#dat[,c(4:ncol(dat))] <- log(dat[,c(4:ncol(dat))]+0.01)
dat[,c(4:ncol(dat))] <- min_max(dat[,c(4:ncol(dat))],0,1)
#id_keep2 <- which(dat$Status %in% 'Unlabelled')
#dat <- dat[id_keep2,]
# Take out columns where there are more than 20% missing values:
takeout_vec <- c()
for (i in 5:ncol(dat)){
missing_percentage = length(which(is.na(dat[,i])))/nrow(dat)
if (missing_percentage > 0.3){
takeout_vec <- c(takeout_vec,i)
}
}
dat <- dat[,-takeout_vec]
hist(as.matrix(dat[,13]))
View(dat)
# Start with osteo data:
#dat <- read_excel('E:/Dropbox/R_Dropbox/Thora_FEB2020/file_show (1).xlsx','Osteo_4tharticle_data')
dat <- read_excel('E:/Dropbox/R_Dropbox/Thora_FEB2020/file_show (1).xlsx','Osteo_4tharticle_data_withnotes')
# Take out columns that all have the same values:
dat <- dat[c(1:58),-c(1,3,4,7,8,9,10)]
# Go through all dataframe, and set NA where there are values below 0:
for (i in 5:ncol(dat)){
id_zero <- which(dat[,i] < 0)
dat[id_zero,i] <- NA
}
# Now, go through all metabolites, identify which are sign. different between days.
dat$Donor <- as.factor(dat$Donor)
dat$Label <- as.factor(dat$Label)
#colnames(dat)[5] <- 'Seeding_dens'
#dat$Seeding_dens <- as.numeric(dat$Seeding_dens)
dat$Day <- as.factor(dat$Day)
dat <- data.frame(dat)
# Change the non-numeric columns to numeric:
for (i in 5:ncol(dat)){
dat[,i] <- as.numeric(dat[,i])
}
#dat[,c(4:ncol(dat))] <- log(dat[,c(4:ncol(dat))]+0.01)
dat[,c(4:ncol(dat))] <- min_max(dat[,c(4:ncol(dat))],0,1)
# Take out columns where there are more than 20% missing values:
takeout_vec <- c()
for (i in 5:ncol(dat)){
missing_percentage = length(which(is.na(dat[,i])))/nrow(dat)
if (missing_percentage > 0.3){
takeout_vec <- c(takeout_vec,i)
}
}
View(dat)
dat <- read_excel('E:/Dropbox/R_Dropbox/Thora_FEB2020/file_show (1).xlsx','Osteo_4tharticle_data_withnotes')
# Take out columns that all have the same values:
dat <- dat[c(1:58),-c(1,3,4,7,8,9,10)]
# For pairwise comparison of days, only keep the data where those days are present:
#id_keep <- which(dat$Day %in% c(3,28)) # What if I can just consider all timepoints? To see which metabolites ARE changing?
#dat <- dat[id_keep,]
# Go through all dataframe, and set NA where there are values below 0:
for (i in 5:ncol(dat)){
id_zero <- which(dat[,i] < 0)
dat[id_zero,i] <- NA
}
# Now, go through all metabolites, identify which are sign. different between days.
dat$Donor <- as.factor(dat$Donor)
dat$Label <- as.factor(dat$Label)
#colnames(dat)[5] <- 'Seeding_dens'
#dat$Seeding_dens <- as.numeric(dat$Seeding_dens)
dat$Day <- as.factor(dat$Day)
dat <- data.frame(dat)
# Change the non-numeric columns to numeric:
for (i in 5:ncol(dat)){
dat[,i] <- as.numeric(dat[,i])
}
#dat[,c(4:ncol(dat))] <- log(dat[,c(4:ncol(dat))]+0.01)
dat[,c(4:ncol(dat))] <- min_max(dat[,c(4:ncol(dat))],1,2)
View(dat)
dat[,10]
dat <- read_excel('E:/Dropbox/R_Dropbox/Thora_FEB2020/file_show (1).xlsx','Osteo_4tharticle_data_withnotes')
# Take out columns that all have the same values:
dat <- dat[c(1:58),-c(1,3,4,7,8,9,10)]
# For pairwise comparison of days, only keep the data where those days are present:
#id_keep <- which(dat$Day %in% c(3,28)) # What if I can just consider all timepoints? To see which metabolites ARE changing?
#dat <- dat[id_keep,]
# Go through all dataframe, and set NA where there are values below 0:
for (i in 5:ncol(dat)){
id_zero <- which(dat[,i] < 0)
dat[id_zero,i] <- NA
}
# Now, go through all metabolites, identify which are sign. different between days.
dat$Donor <- as.factor(dat$Donor)
dat$Label <- as.factor(dat$Label)
#colnames(dat)[5] <- 'Seeding_dens'
#dat$Seeding_dens <- as.numeric(dat$Seeding_dens)
dat$Day <- as.factor(dat$Day)
dat <- data.frame(dat)
# Change the non-numeric columns to numeric:
for (i in 5:ncol(dat)){
dat[,i] <- as.numeric(dat[,i])
}
dat[,10]
min_max(dat[,10],1,2)
for (i in 5:ncol(dat)){
dat[,i] <- min_max(dat[,i],0,1)
}
View(dat)
setwd("E:/Dropbox/R_Dropbox/siggitRausti")
library(devtools)
document()
